package com.example.administrator.weixinhookdemo;

import com.blankj.utilcode.util.EncodeUtils;

import org.junit.Test;

import java.io.IOException;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() throws Exception {
        //        assertEquals(4, 2 + 2);
        byte[] bytes =
                new byte[] {
                    8, -57, -66, -12, -35, 3, 18, 14, 10, 12, 99, 115, 112, 53, 57, 52, 48, 50, 55,
                    50, 53, 57, 26, 21, 10, 19, 119, 120, 105, 100, 95, 50, 102, 106, 53, 119, 97,
                    120, 105, 117, 106, 48, 100, 50, 50, 32, 1, 42, 74, 10, 72, -26, -120, -111,
                    -23, -128, -102, -24, -65, -121, -28, -70, -122, -28, -67, -96, -25, -102, -124,
                    -26, -100, -117, -27, -113, -117, -23, -86, -116, -24, -81, -127, -24, -81, -73,
                    -26, -79, -126, -17, -68, -116, -25, -114, -80, -27, -100, -88, -26, -120, -111,
                    -28, -69, -84, -27, -113, -81, -28, -69, -91, -27, -68, -128, -27, -89, -117,
                    -24, -127, -118, -27, -92, -87, -28, -70, -122, 48, 3, 56, 1, 66, 2, 8, 0, 72,
                    -122, -29, -87, -41, 5, 96, -24, -64, -21, -19, -104, -65, -35, -98, 39, 104,
                    -127, -3, -6, -98, 2
                };
        a aVar2 = new a(bytes, bytes.length);

//        System.out.print(aVar2.ry() + ",");
//        int i = -57 & 127;
//        i |= (-64 & 127) << 7;
//        System.out.print(i);

        for (int i = a(aVar2); i > 0; i = a(aVar2)) {
            System.out.print(i + ",");
        }

        System.out.print(
                new String(
                        new byte[] {
                            10, 14, 10, 12, 99, 115, 112, 53, 57, 52, 48, 50, 55, 50, 53, 57, 18,
                            11, 10, 9, -23, -103, -120, -25, -69, -115, -23, -71, -113, 26, 5, 10,
                            3, 67, 83, 80, 34, 14, 10, 12, 99, 104, 101, 110, 115, 104, 97, 111,
                            112, 101, 110, 103, 40, 1, 50, 2, 8, 0, 56, -1, -1, -1, -1, 15, 64, 3,
                            72, 1, 82, 0, 90, 0, 98, 0, 104, 0, 112, 0, -126, 1, 0, -120, 1, 0,
                            -112, 1, 0, -86, 1, 15, -27, -109, -120, -27, -109, -120, -27, -109,
                            -120, -27, -109, -120, -27, -109, -120, -80, 1, 1, -72, 1, 1, -64, 1, 0,
                            -48, 1, 10, -40, 1, 6, -120, 2, 7, -112, 2, 0, -104, 2, 0, -86, 2, 126,
                            8, 1, 18, 108, 104, 116, 116, 112, 58, 47, 47, 115, 104, 109, 109, 115,
                            110, 115, 46, 113, 112, 105, 99, 46, 99, 110, 47, 109, 109, 115, 110,
                            115, 47, 76, 119, 99, 98, 104, 65, 109, 77, 110, 90, 66, 103, 89, 78,
                            87, 114, 115, 99, 76, 89, 67, 105, 97, 54, 82, 109, 106, 90, 56, 83,
                            119, 103, 106, 111, 113, 67, 106, 90, 120, 90, 88, 78, 111, 121, 69, 83,
                            101, 103, 103, 107, 121, 117, 81, 116, 111, 65, 79, 50, 121, 90, 67, 52,
                            116, 48, 66, 75, 102, 118, 84, 55, 106, 105, 99, 83, 117, 102, 77, 47,
                            48, 24, -71, -95, -76, -83, -38, -88, -43, -42, -80, 1, 32, -127, 3,
                            -78, 2, 2, 74, 69, -70, 2, -128, 1, 104, 116, 116, 112, 58, 47, 47, 119,
                            120, 46, 113, 108, 111, 103, 111, 46, 99, 110, 47, 109, 109, 104, 101,
                            97, 100, 47, 118, 101, 114, 95, 49, 47, 104, 120, 105, 97, 53, 105, 98,
                            75, 65, 84, 121, 111, 119, 98, 105, 97, 74, 66, 101, 51, 67, 89, 67,
                            107, 69, 75, 80, 80, 122, 56, 69, 114, 121, 102, 65, 108, 75, 107, 78,
                            119, 85, 71, 56, 109, 86, 54, 104, 89, 66, 82, 121, 102, 111, 71, 84,
                            85, 87, 105, 97, 105, 99, 53, 115, 104, 56, 70, 89, 113, 56, 113, 120,
                            120, 81, 105, 97, 102, 105, 99, 86, 54, 109, 105, 97, 74, 74, 82, 70,
                            107, 104, 75, 56, 71, 55, 81, 47, 48, -62, 2, -127, 1, 104, 116, 116,
                            112, 58, 47, 47, 119, 120, 46, 113, 108, 111, 103, 111, 46, 99, 110, 47,
                            109, 109, 104, 101, 97, 100, 47, 118, 101, 114, 95, 49, 47, 104, 120,
                            105, 97, 53, 105, 98, 75, 65, 84, 121, 111, 119, 98, 105, 97, 74, 66,
                            101, 51, 67, 89, 67, 107, 69, 75, 80, 80, 122, 56, 69, 114, 121, 102,
                            65, 108, 75, 107, 78, 119, 85, 71, 56, 109, 86, 54, 104, 89, 66, 82,
                            121, 102, 111, 71, 84, 85, 87, 105, 97, 105, 99, 53, 115, 104, 56, 70,
                            89, 113, 56, 113, 120, 120, 81, 105, 97, 102, 105, 99, 86, 54, 109, 105,
                            97, 74, 74, 82, 70, 107, 104, 75, 56, 71, 55, 81, 47, 57, 54, -46, 2, 2,
                            8, 0, -22, 2, 76, 118, 49, 95, 52, 99, 48, 100, 97, 55, 55, 48, 50, 50,
                            50, 99, 50, 56, 98, 54, 101, 56, 53, 56, 99, 101, 49, 97, 54, 101, 98,
                            99, 48, 53, 99, 55, 51, 51, 56, 57, 56, 49, 97, 98, 53, 55, 99, 56, 55,
                            56, 102, 49, 53, 101, 52, 102, 53, 52, 57, 48, 52, 98, 98, 48, 48, 51,
                            51, 52, 64, 115, 116, 114, 97, 110, 103, 101, 114, -110, 3, 6, 10, 0,
                            16, 0, 24, 0, -88, 3, 0, -72, 3, 0, -64, 3, 0, -54, 3, 6, 8, 0, 24, 0,
                            34, 0, -48, 3, 0, -14, 3, 2, 8, 0, -128, 4, 0, -120, 4, 0, -112, 4, 0,
                            -104, 4, 0
                        },
                        "UTF-8"));
    }

    public static int a(a a) throws IOException {
        int i = 0;
        a aVar2 = a;
        if (aVar2.bfJ != aVar2.bufferSize || aVar2.of(false)) {
            aVar2.bfK = aVar2.ry();
            if (aVar2.bfK == 0) {
                throw b.cJI();
            }
            i = aVar2.bfK;
        } else {
            aVar2.bfK = 0;
        }
        return eb(i);
    }

    public static int eb(int i) {
        return i >>> 3;
    }
}
